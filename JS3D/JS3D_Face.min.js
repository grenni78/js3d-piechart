var JS3D_Face=new Class({points:-1,center:Class.empty,lowestZ:999,highestZ:0,fillStyle:"rgba(128,128,128,0.2)",strokeStyle:"rgba(0,0,0,0)",initialize:function(t,i){arguments.length>1&&this.setFillStyle(i),this.setPoints(t)},setPoints:function(t){"array"==$type(t)&&$defined(t[0].x)&&(this.points=t,this.updateCenter())},invertNormalVector:function(){this.normalVector[0]=-this.normalVector[0],this.normalVector[1]=-this.normalVector[1],this.normalVector[2]=-this.normalVector[2],this._calculateNormalVector0()},_calculateNormalVector0:function(){var t=this.normalVector,i=Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2));this.normalVector0=[t[0]/i,t[1]/i,t[2]/i]},_calculateNormalVector:function(){if(!(this.points.length<3||$defined(this.normalVector))){var t=0,i=1,s=2,o=[this.points[0].x-this.points[2].x,this.points[0].y-this.points[2].y,this.points[0].z-this.points[2].z],n=[this.points[1].x-this.points[2].x,this.points[1].y-this.points[2].y,this.points[1].z-this.points[2].z],e=[o[i]*n[s]-o[s]*n[i],o[s]*n[t]-o[t]*n[s],o[t]*n[i]-o[i]*n[t]];this.normalVector=e,this._calculateNormalVector0(),this._calculateDistanceToRoot()}},_calculateDistanceToRoot:function(){this.distanceToRoot=this.points[0].x*this.normalVector0[0]+this.points[0].y*this.normalVector0[1]+this.points[0].z*this.normalVector0[2]},updateCenter:function(){this.center=new JS3D_Point(this.points[0].x,this.points[0].y,this.points[0].z);var t=0;for(t=0;t<this.points.length;t++)this.center.add(this.points[t]),this.highestZ<this.points[t].z&&(this.highestZ=this.points[t].z),this.lowestZ>this.points[t].z&&(this.lowestZ=this.points[t].z);this.center.divScalar(t+1),this._calculateNormalVector()},addPoints:function(t){"array"==$type(t)&&$defined(t[0].x)&&(this.points=this.points.append(t),this.updateCenter())},setFillStyle:function(t){this.fillStyle=t},setStrokeStyle:function(t){this.strokeStyle=t},getNormalVector:function(){return this.normalVector},getDistanceFromPoint:function(t,i,s){if(!(this.points.length<3)&&$defined(this.normalVector)){var o=t*this.normalVector0[0]+i*this.normalVector0[0]+s*this.normalVector0[2]-this.distanceToRoot;return o}}});